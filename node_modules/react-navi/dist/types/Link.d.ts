import * as React from 'react';
import { URLDescriptor } from 'navi';
export interface LinkProps {
    active?: boolean;
    activeClassName?: string;
    activeStyle?: object;
    children?: any;
    className?: string;
    disabled?: boolean;
    exact?: boolean;
    hidden?: boolean;
    href: string | Partial<URLDescriptor>;
    id?: string;
    lang?: string;
    prefetch?: boolean;
    ref?: React.Ref<HTMLAnchorElement>;
    rel?: string;
    style?: object;
    tabIndex?: number;
    target?: string;
    title?: string;
    onClick?: React.MouseEventHandler<HTMLAnchorElement>;
    render?: (props: LinkRendererProps) => any;
}
export interface LinkRendererProps {
    anchorProps: LinkContext;
    active: boolean;
    activeClassName?: string;
    activeStyle?: object;
    children: any;
    className?: string;
    disabled?: boolean;
    tabIndex?: number;
    hidden?: boolean;
    href: string;
    id?: string;
    lang?: string;
    style?: object;
    target?: string;
    title?: string;
    onClick: React.MouseEventHandler<any>;
}
export interface LinkAnchorProps extends LinkContext {
}
export declare const LinkContext: React.Context<LinkContext>;
export interface LinkContext {
    onClick: (event: React.MouseEvent<HTMLAnchorElement>) => void;
    ref: React.Ref<HTMLAnchorElement>;
    id?: string;
    lang?: string;
    rel?: string;
    tabIndex?: number;
    target?: string;
    title?: string;
    href?: string;
}
export declare class LinkAnchor extends React.Component<React.AnchorHTMLAttributes<HTMLAnchorElement>> {
    render(): JSX.Element;
    renderChildren: (context: LinkContext) => JSX.Element;
}
export declare namespace Link {
    type Props = LinkProps;
    type RendererProps = LinkRendererProps;
    type AnchorProps = LinkAnchorProps;
}
export declare const Link: (React.ComponentClass<LinkProps & React.ClassAttributes<HTMLAnchorElement>> & {
    Anchor: typeof LinkAnchor;
}) | (React.StatelessComponent<LinkProps & React.ClassAttributes<HTMLAnchorElement>> & {
    Anchor: typeof LinkAnchor;
});
